---
import { type CollectionEntry, getCollection, render } from 'astro:content';
import { blogSchema } from '#schemas/index.js';
import Layout from '#layouts/MarkdownPostLayout.astro';

export const prerender = true;

// type Props = CollectionEntry<'blog'>;

export async function getStaticPaths() {
  //const posts = await getCollection('blog', ({ data }) => data.draft !== true);
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { id: post.id },
    props: { post },
  }));
}
const { id } = Astro.params;
const { post } = Astro.props;

if (post === undefined) {
  return Astro.rewrite('/404');
}

const { Content } = await render(post);

// const { Content } = await post.render();

const { error, data: parsedData } = await blogSchema.safeParseAsync(post.data);

if (error) {
  throw new Error('Validation error:', error);
}
---

<Layout id={id} blogData={parsedData}>
  <Content />
</Layout>
