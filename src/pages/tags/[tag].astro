---
import Layout from '@layouts/BaseLayout.astro';
import DeckofCards from '@components/DeckofCards.astro';
import { Box } from '@cc/index.js';
// import { type BlogSchemaType, blogSchema } from '../../schemas.ts';

import { getCollection } from 'astro:content';

// import type { BlogSchemaType } from '../../schemas.ts';

import type { CollectionEntry } from 'astro:content';

// interface Props {
//   posts: CollectionEntry<'blog'>;
// }
export const prerender = true;

export const getStaticPaths = async () => {
  const allPosts = await getCollection('blog');

  const uniqueTags = [
    ...new Set(allPosts.flatMap((__post) => __post.data.tags)),
  ];

  const publishsedPosts = allPosts.filter(
    ({ data }) => data.draft !== true && data.tags.includes(tag),
  );
  // parama is  uniqueTags
  // and the post with that tag
  return uniqueTags.map((tag) => ({
    params: { tag },
    props: publishsedPosts,
  }));
};

const { tag } = Astro.params;
const publishsedPosts = Astro.props;
---

<Layout>
  <Box borderWidth="0" padding="0">
    <Box borderWidth="0">
      <h1 class="gradient-text">{`#${tag}`}</h1>
    </Box>
    <DeckofCards publishsedPosts={publishsedPosts} />
  </Box>
</Layout>
