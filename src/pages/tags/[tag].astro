---
import { format } from 'date-fns'
import Link from '@components/PolyMorphicElement.astro'

import BaseLayout from '@layouts/BaseLayout.astro'
import type { InferGetStaticParamsType } from 'astro'

import { getCollection } from 'astro:content'

// import type { CollectionEntry } from 'astro:content'

// A getStaticPaths function should always return a list of objects containing params
// (what to call each page route) and optionally any props (data that you want to pass to those pages).
//  Earlier, you defined each tag name that you knew was used in your blog and passed the entire list
//  of posts as props to each page.
export const prerender = true
export const getStaticPaths = async () => {
    const allPosts = await getCollection('posts')
    const uniqueTags = [
        ...new Set(allPosts.map((post) => post.data.tags).flat()),
    ]

    const objs = uniqueTags.map((tag: string) => {
        const filteredPosts = allPosts.filter((post) =>
            post.data.tags.includes(tag),
        )
        return {
            params: { tag },
            props: {
                posts: filteredPosts,
            },
        }
    })

    return objs
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>
// interface Props {
//     posts: CollectionEntry<'posts'>[]
// }

const { tag } = Astro.params as Params
const { posts } = Astro.props
---

<BaseLayout pageTitle={tag}>
    <ul>
        {
            posts.map((post) => (
                <li>
                    <Link as="a" href={'/posts/' + post.slug}>
                        {post.data.title},{' '}
                        <span class="small-text">
                            {format(post.data.pubDate, 'MMMM do, yyyy')}
                        </span>
                    </Link>
                </li>
            ))
        }
    </ul>
</BaseLayout>

<style>
    .small-text {
        font-size: 0.8rem;
    }
</style>
