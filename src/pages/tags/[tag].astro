---
import type {
    InferGetStaticParamsType,
    // InferGetStaticPropsType,
    // GetStaticPaths,
} from 'astro'
import BaseLayout from '@layouts/BaseLayout.astro'
import BlogPost from '@components/BlogPost.astro'
import { getCollection } from 'astro:content'

// import type { CollectionEntry } from 'astro:content'

// A getStaticPaths function should always return a list of objects containing params
// (what to call each page route) and optionally any props (data that you want to pass to those pages).
//  Earlier, you defined each tag name that you knew was used in your blog and passed the entire list
//  of posts as props to each page.

export const getStaticPaths = async () => {
    const allPosts = await getCollection('posts')
    const uniqueTags = [
        ...new Set(allPosts.map((post) => post.data.tags).flat()),
    ]

    const objs = uniqueTags.map((tag: string) => {
        const filteredPosts = allPosts.filter((post) =>
            post.data.tags.includes(tag)
        )
        return {
            params: { tag },
            props: {
                posts: filteredPosts,
            },
        }
    })

    return objs
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>
// interface Props {
//     posts: CollectionEntry<'posts'>[]
// }

const { tag } = Astro.params as Params
const { posts } = Astro.props
---

<BaseLayout pageTitle="Tags">
    <p>Posts tagged with {tag}</p>

    <ul>
        {
            posts.map((post) => (
                <li>
                    <BlogPost
                        href={'/posts/' + post.slug}
                        title={post.data.title}
                    />
                </li>
            ))
        }
    </ul>
</BaseLayout>
