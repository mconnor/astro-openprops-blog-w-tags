---
import BaseLayout from '@layouts/BaseLayout.astro'

import { getCollection } from 'astro:content'

const allPosts = await getCollection('posts')

const tagCounts: Record<string, number> = {}

allPosts.forEach((post) =>
    (post.data.tags || []).forEach((tag: string) => {
        tagCounts[tag] = (tagCounts[tag] || 0) + 1
    })
)

const tags = [...new Set(allPosts.map((post) => post.data.tags).flat())]

// const tags = Object.keys(tagCounts)
---

<BaseLayout pageTitle="Tag Index">
    <div class="tags">
        {
            tags.map((tag) => (
                <button>
                    <a href={`/tags/${tag}`}>
                        {tag} <span>({tagCounts[tag]})</span>
                    </a>
                </button>
            ))
        }
    </div>
</BaseLayout>

<style>
    a {
        color: #00539f;
    }

    .tags {
        display: flex;
        flex-wrap: wrap;
        gap: var(--size-3);

        & button {
            display: inline-flex;
            white-space: nowrap;

            font-size: var(--font-size-fluid-1);
            font-weight: var(--font-weight-7);

            /* padding-inline: var(--size-6);
            padding-block: var(--size-3); */

            color: var(--blue-9);
            border: var(--border-size-2) solid var(--blue-5);
            background-color: transparent;
            border-radius: var(--radius-2);

            a {
                text-decoration: none;
            }

            &:is(:hover, :focus) {
                cursor: pointer;
                color: var(--blue-0);
                background-color: var(--blue-5);

                @nest .light & {
                    text-shadow: 0 1px 0 var(--blue-8);
                }
            }

            &:active:not(:focus-visible) {
                position: relative;
                /*     inset-block-start: 2px; */
            }

            @nest .dark & {
                border-color: var(--blue-3);
                color: var(--blue-1);

                &:hover {
                    background-color: var(--blue-3);
                    color: black;
                }
            }
        }
    }
</style>
