---
import { format } from 'date-fns';
import type { CollectionEntry } from 'astro:content';
import { getEntry } from 'astro:content';

type BlogPostType = CollectionEntry<'blog'>[];
interface Props {
  posts: BlogPostType;
}

const { posts } = Astro.props;

const getDecoratedPosts = async (_posts: BlogPostType) => {
  const formattedPosts = await Promise.all(
    _posts.map(async (p) => {
      const author = await getEntry(
        'authors',
        p.data.author.id ?? 'mike-connor',
      );
      return {
        title: p.data.title,
        authName: author.data.name,
        pubDate: p.data.pubDate,
        slug: p.slug,
      };
    }),
  );
  return formattedPosts;
};

const decoratedPosts = await getDecoratedPosts(posts);

// {format(post.data.pubDate, 'MMM do, yyyy')}
---

<ul class="tags-class" data-columns="2">
  {
    decoratedPosts.map(({ title, authName, pubDate, slug }) => (
      <li>
        <a href={'/posts/' + slug}>
          <span>
            {title},
            <small>
              {authName}
              {format(pubDate, 'MMM do, yyyy')}
            </small>
          </span>
        </a>
      </li>
    ))
  }
</ul>

<style>
  a {
    padding: var(--size-fluid-2);

    .small-text {
      font-size: 0.8rem;
      margin-left: 0.5rem;

      font-size: var(--font-size-0);
    }
  }
</style>
