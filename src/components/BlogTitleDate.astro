---
import { format } from 'date-fns'
import type { CollectionEntry } from 'astro:content'
import { getEntry } from 'astro:content'
import { authorSchema } from 'src/schemas'
import { prerender } from 'src/pages/about.astro'

type BlogPostType = CollectionEntry<'blog'>[]
interface Props {
    posts: BlogPostType
}

const { posts } = Astro.props

const formatPost = async (origPosts: BlogPostType) => {
    const formattedPosts = await Promise.all(
        origPosts.map(async (p) => {
            const author = await getEntry('authors', p.data.author.id)
            return {
                title: p.data.title,
                authName: author.data.name,
                pubDate: p.data.pubDate,
                slug: p.slug,
            }
        }),
    )
    return formattedPosts
}

const fp = await formatPost(posts)

// {format(post.data.pubDate, 'MMM do, yyyy')}
---

<ul class="mygrid">
    {
        fp.map(({ title, authName, pubDate, slug }) => (
            <li>
                <button>
                    <a href={'/posts/' + slug}>
                        {title},
                        <span class="small-text">
                            {authName}
                            {format(pubDate, 'MMM do, yyyy')}
                        </span>
                    </a>
                </button>
            </li>
        ))
    }
</ul>

<style>
    .mygrid {
        display: grid;
        grid-template-columns: 1fr;

        border: 1px solid var(--color-gray-300);

        > li {
            align-self: stretch;
            list-style: none;
            > button {
                width: 100%;
                margin-top: var(--size-2);

                .small-text {
                    font-size: 0.8rem;
                }
            }
        }
    }
</style>
