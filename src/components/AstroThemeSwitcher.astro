---
// import type { HTMLAttributes }
// interface Props extends HTMLAttributes<'div'> {}

// const {htm }  = Astro.props;
---

<astro-theme-switcher>
  <form id="theme" data-select-theme data-doc>
    <label>
      Auto
      <input type="radio" name="theme" value="auto" checked />
    </label>
    <label>
      Light
      <input type="radio" name="theme" value="light" />
    </label>
    <label>
      Dark
      <input type="radio" name="theme" value="dark" />
    </label>
  </form>
</astro-theme-switcher>

<script>
  class AstroThemeSwitcher extends HTMLElement {
    constructor() {
      super();
      // Bind the handleChange method to ensure the context is correct when called
      this.handleChange = this.handleChange.bind(this);
    }

    connectedCallback() {
      this._firstDocElement = window.document.firstElementChild;

      this.querySelector('[data-select-theme]')?.addEventListener(
        'input',
        this.handleChange,
      );
    }

    disconnectedCallback() {
      this.querySelector('[data-select-select]')?.removeEventListener(
        'input',
        this.handleChange,
      );
    }

    handleChange(e) {
      const themeVal = e.target.value;
      console.log(`set theme  to: ${themeVal}`); // This console log is for debugging purposes
      // Using 'navigate' function from 'astro:transitions/client'
      this._firstDocElement.setAttribute('data-theme', e.target.value);
    }
  }

  customElements.define('astro-theme-switcher', AstroThemeSwitcher);
</script>
